[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "krishi-sakhi"
version = "1.0.0"
description = "AI-Powered Personal Farming Assistant for Kerala Farmers"
authors = [
    {name = "Krishi Sakhi Team", email = "team@krishisakhi.in"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "celery[redis]>=5.3.0",
    "flower>=2.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",
    "aiofiles>=23.2.0",
    "python-dotenv>=1.0.0",
    "cryptography>=41.0.0",
    "bcrypt>=4.1.0",
    "pillow>=10.1.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "scikit-learn>=1.3.0",
    "sentence-transformers>=2.2.0",
    "transformers>=4.35.0",
    "torch>=2.1.0",
    "openai>=1.3.0",
    "azure-cognitiveservices-speech>=1.34.0",
    "google-cloud-texttospeech>=2.16.0",
    "coqui-tts>=0.20.0",
    "whisper>=1.1.0",
    "vosk>=0.3.45",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "websockets>=12.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.42b0",
    "opentelemetry-instrumentation-redis>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "structlog>=23.2.0",
    "rich>=13.7.0",
    "typer>=0.9.0",
    "click>=8.1.0",
    "jinja2>=3.1.0",
    "markdown>=3.5.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "pypdf2>=3.0.0",
    "python-docx>=1.1.0",
    "openpyxl>=3.1.0",
    "geopy>=2.4.0",
    "shapely>=2.0.0",
    "geoalchemy2>=0.14.0",
    "folium>=0.15.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
    "fasttext>=0.9.2",
    "langdetect>=1.0.9",
    "polyglot>=16.7.4",
    "pyicu>=2.11",
    "croniter>=2.0.0",
    "schedule>=1.2.0",
    "apscheduler>=3.10.0",
    "twilio>=8.10.0",
    "firebase-admin>=6.4.0",
    "sendgrid>=6.10.0",
    "smtplib2>=0.2.1",
    "email-validator>=2.1.0",
    "phonenumbers>=8.13.0",
    "validators>=0.22.0",
    "python-slugify>=8.0.0",
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
    "babel>=2.13.0",
    "iso8601>=1.1.0",
    "rfc3339-validator>=0.1.4",
    "email-validator>=2.1.0",
    "dnspython>=2.4.0",
    "idna>=3.6",
    "certifi>=2023.11.0",
    "urllib3>=2.1.0",
    "charset-normalizer>=3.3.0",
    "six>=1.16.0",
    "packaging>=23.2",
    "pyparsing>=3.1.0",
    "attrs>=23.2.0",
    "jsonschema>=4.20.0",
    "referencing>=0.30.0",
    "rpds-py>=0.10.0",
    "fsspec>=2023.12.0",
    "tqdm>=4.66.0",
    "regex>=2023.10.0",
    "safetensors>=0.4.0",
    "tokenizers>=0.15.0",
    "huggingface-hub>=0.19.0",
    "filelock>=3.13.0",
    "sympy>=1.12",
    "networkx>=3.2.0",
    "scipy>=1.11.0",
    "joblib>=1.3.0",
    "threadpoolctl>=3.2.0",
    "typing-extensions>=4.8.0",
    "annotated-types>=0.6.0",
    "pydantic-core>=2.14.0",
    "email-validator>=2.1.0",
    "anyio>=4.0.0",
    "sniffio>=1.3.0",
    "h11>=0.14.0",
    "wsproto>=1.2.0",
    "h2>=4.1.0",
    "hypercorn>=0.14.0",
    "httptools>=0.6.0",
    "python-dotenv>=1.0.0",
    "watchfiles>=0.21.0",
    "watchdog>=3.0.0",
    "greenlet>=3.0.0",
    "importlib-metadata>=7.0.0",
    "zipp>=3.17.0",
    "Mako>=1.3.0",
    "MarkupSafe>=2.1.0",
    "alembic>=1.13.0",
    "typing-extensions>=4.8.0",
    "greenlet>=3.0.0",
    "importlib-metadata>=7.0.0",
    "zipp>=3.17.0",
    "Mako>=1.3.0",
    "MarkupSafe>=2.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
    "httpx>=0.25.0",
    "respx>=0.20.0",
    "freezegun>=1.2.0",
    "responses>=0.24.0",
    "black>=23.11.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "coverage>=7.3.0",
    "pytest-html>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "locust>=2.17.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
    "py-spy>=0.3.0",
    "pytest-clarity>=1.0.0",
    "pytest-sugar>=0.9.0",
    "pytest-timeout>=2.2.0",
    "pytest-env>=1.1.0",
    "pytest-dotenv>=0.5.0",
    "pytest-postgresql>=5.0.0",
    "pytest-redis>=3.0.0",
    "testcontainers>=3.7.0",
    "docker>=6.1.0",
    "docker-compose>=1.29.0",
]

[project.urls]
Homepage = "https://github.com/krishi-sakhi/backend"
Documentation = "https://docs.krishisakhi.in"
Repository = "https://github.com/krishi-sakhi/backend"
Issues = "https://github.com/krishi-sakhi/backend/issues"

[project.scripts]
krishi-sakhi = "app.main:main"
krishi-sakhi-worker = "app.tasks.celery_app:main"
krishi-sakhi-beat = "app.tasks.schedules:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-args
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "Q", # flake8-quotes
    "RUF", # ruff-specific rules
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e
    "SIM108", # Use ternary operator instead of if-else-block
    "TCH003", # Move standard library import into TYPE_CHECKING block
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["ARG001", "S101", "TID252"]

[tool.ruff.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "flower.*",
    "redis.*",
    "asyncpg.*",
    "psycopg2.*",
    "sqlalchemy.*",
    "alembic.*",
    "pydantic.*",
    "fastapi.*",
    "uvicorn.*",
    "httpx.*",
    "aiohttp.*",
    "websockets.*",
    "opentelemetry.*",
    "structlog.*",
    "rich.*",
    "typer.*",
    "click.*",
    "jinja2.*",
    "markdown.*",
    "beautifulsoup4.*",
    "lxml.*",
    "pypdf2.*",
    "python-docx.*",
    "openpyxl.*",
    "geopy.*",
    "shapely.*",
    "geoalchemy2.*",
    "folium.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "fasttext.*",
    "langdetect.*",
    "polyglot.*",
    "pyicu.*",
    "croniter.*",
    "schedule.*",
    "apscheduler.*",
    "twilio.*",
    "firebase.*",
    "sendgrid.*",
    "smtplib2.*",
    "email_validator.*",
    "phonenumbers.*",
    "validators.*",
    "python_slugify.*",
    "python_dateutil.*",
    "pytz.*",
    "babel.*",
    "iso8601.*",
    "rfc3339_validator.*",
    "dnspython.*",
    "idna.*",
    "certifi.*",
    "urllib3.*",
    "charset_normalizer.*",
    "six.*",
    "packaging.*",
    "pyparsing.*",
    "attrs.*",
    "jsonschema.*",
    "referencing.*",
    "rpds.*",
    "fsspec.*",
    "tqdm.*",
    "regex.*",
    "safetensors.*",
    "tokenizers.*",
    "huggingface_hub.*",
    "filelock.*",
    "sympy.*",
    "networkx.*",
    "scipy.*",
    "joblib.*",
    "threadpoolctl.*",
    "typing_extensions.*",
    "annotated_types.*",
    "pydantic_core.*",
    "anyio.*",
    "sniffio.*",
    "h11.*",
    "wsproto.*",
    "h2.*",
    "hypercorn.*",
    "httptools.*",
    "watchfiles.*",
    "watchdog.*",
    "greenlet.*",
    "importlib_metadata.*",
    "zipp.*",
    "Mako.*",
    "MarkupSafe.*",
    "sentence_transformers.*",
    "transformers.*",
    "torch.*",
    "openai.*",
    "azure.*",
    "google.*",
    "coqui.*",
    "whisper.*",
    "vosk.*",
    "requests.*",
    "aiofiles.*",
    "cryptography.*",
    "bcrypt.*",
    "pillow.*",
    "opencv-python.*",
    "numpy.*",
    "pandas.*",
    "sklearn.*",
    "factory.*",
    "faker.*",
    "respx.*",
    "freezegun.*",
    "responses.*",
    "pre_commit.*",
    "isort.*",
    "flake8.*",
    "bandit.*",
    "safety.*",
    "coverage.*",
    "pytest.*",
    "locust.*",
    "memory_profiler.*",
    "line_profiler.*",
    "py_spy.*",
    "testcontainers.*",
    "docker.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "auth: marks tests related to authentication",
    "api: marks tests related to API endpoints",
    "db: marks tests that require database",
    "redis: marks tests that require Redis",
    "celery: marks tests that require Celery",
    "external: marks tests that require external services",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/\.venv/*",
    "*/\.env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
